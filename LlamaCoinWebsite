<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SpitFi - Llama Spitting Diamonds</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Montserrat', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #2a2a72, #009ffd);
            color: white;
            text-align: center;
        }
        header {
            padding: 20px;
            background-color: #333;
        }
        header h1 {
            font-size: 2.5rem;
        }
        .hero {
            padding: 50px;
        }
        .hero img {
            max-width: 300px;
        }
        .features {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            padding: 30px;
        }
        .feature-card {
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 10px;
            max-width: 300px;
        }
        .feature-card h3 {
            margin-bottom: 10px;
        }
        footer {
            background-color: #222;
            padding: 20px;
            font-size: 0.9rem;
        }
        .deploy-instructions {
            background-color: rgba(255, 255, 255, 0.1);
            padding: 20px;
            margin: 20px;
            border-radius: 10px;
        }
        .deploy-instructions h2 {
            color: #f0e130;
        }
        .interactive-section {
            background: rgba(255, 255, 255, 0.1);
            padding: 30px;
            margin: 20px;
            border-radius: 10px;
            text-align: left;
        }
        .interactive-section h2 {
            color: #ff6f61;
        }
        .interactive-section ul {
            list-style-type: none;
            padding: 0;
        }
        .interactive-section li {
            margin: 10px 0;
        }
        .transaction-simulator {
            margin: 20px 0;
        }
        .transaction-simulator input {
            margin: 5px;
            padding: 10px;
            border-radius: 5px;
            border: none;
        }
        .transaction-simulator button {
            padding: 10px 20px;
            background-color: #ff6f61;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .wallet-section {
            background: rgba(255, 255, 255, 0.1);
            padding: 30px;
            margin: 20px;
            border-radius: 10px;
        }
        .wallet-section button {
            padding: 10px 20px;
            background-color: #4caf50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <header>
        <h1>SpitFi</h1>
        <p>The Llama That Spits Diamonds</p>
    </header>
    <section class="hero">
        <img src="llama-diamond.png" alt="SpitFi Llama">
        <p>Welcome to SpitFi, the revolutionary utility DeFi token bridging Ethereum and Solana networks!</p>
    </section>
    <section class="features">
        <div class="feature-card">
            <h3>ERC-20 Compatible</h3>
            <p>Seamlessly integrated with Ethereum, allowing easy transactions and smart contract interactions.</p>
        </div>
        <div class="feature-card">
            <h3>Bridge to Solana</h3>
            <p>Cross-chain functionality for fast, low-cost transactions on the Solana blockchain.</p>
        </div>
        <div class="feature-card">
            <h3>Community Rewards</h3>
            <p>Earn rewards and participate in governance by holding and using SpitFi tokens.</p>
        </div>
    </section>
    <section class="wallet-section">
        <h2>Wallet Integration</h2>
        <button onclick="connectWallet()">Connect Wallet</button>
        <p id="walletAddress">Wallet Address: Not Connected</p>
        <p id="balance">Token Balance: --</p>
    </section>
    <section class="interactive-section">
        <h2>Try It Out</h2>
        <ul>
            <li><strong>View Token Details:</strong> <button onclick="alert('Token Details: Name - SpitFi, Symbol - SPIT, Decimals - 18')">Click Here</button></li>
            <li><strong>Simulate a Transaction:</strong>
                <div class="transaction-simulator">
                    <input type="text" id="receiver" placeholder="Recipient Address">
                    <input type="number" id="amount" placeholder="Amount to Transfer">
                    <button onclick="simulateTransaction()">Send</button>
                </div>
            </li>
        </ul>
    </section>
    <section class="deploy-instructions">
        <h2>How to Deploy</h2>
        <p><strong>Website Deployment:</strong> Use platforms like <a href="https://pages.github.com/" target="_blank">GitHub Pages</a>, <a href="https://www.netlify.com/" target="_blank">Netlify</a>, or <a href="https://vercel.com/" target="_blank">Vercel</a>. Upload this HTML file along with any required assets (e.g., images, CSS).</p>
        <p><strong>ERC-20 Token Deployment:</strong> Use tools like <a href="https://remix.ethereum.org/" target="_blank">Remix IDE</a> to compile and deploy your token contract on the Ethereum network. Use a bridge service like <a href="https://wormhole.com/" target="_blank">Wormhole</a> to enable bridging to the Solana blockchain.</p>
    </section>
    <footer>
        <p>&copy; 2024 SpitFi. All Rights Reserved.</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/ethers/dist/ethers.min.js"></script>
    <script>
        let provider;
        let signer;

        async function connectWallet() {
            if (window.ethereum) {
                provider = new ethers.providers.Web3Provider(window.ethereum);
                await provider.send("eth_requestAccounts", []);
                signer = provider.getSigner();
                const address = await signer.getAddress();
                document.getElementById('walletAddress').innerText = `Wallet Address: ${address}`;
                fetchBalance(address);
            } else {
                alert('MetaMask is not installed. Please install it to use this feature.');
            }
        }

        async function fetchBalance(address) {
            const contractAddress = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4; // Replace with deployed contract address
            const abi = ["function balanceOf(address owner) view returns (uint256)"];
            const contract = new ethers.Contract(contractAddress, abi, provider);
            const balance = await contract.balanceOf(address);
            document.getElementById('balance').innerText = `Token Balance: ${ethers.utils.formatUnits(balance, 18)} SPIT`;
        }

        function simulateTransaction() {
            const receiver = document.getElementById('receiver').value;
            const amount = document.getElementById('amount').value;
            if (!receiver || !amount || amount <= 0) {
                alert('Please enter a valid recipient and amount.');
                return;
            }
            alert(`Transaction simulated! Sent ${amount} SPIT to ${receiver}.`);
        }
    </script>
</body>
</html>
